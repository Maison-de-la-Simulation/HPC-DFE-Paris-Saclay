# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, year-2021-2022 ]
  pull_request:
    branches: [ master, year-2021-2022 ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: hdf5 packet
        run: |
          sudo apt-get install libhdf5-dev
          h5c++ -show

      - name: mpi packet
        run: |
          sudo apt-get install mpich
          mpic++ -show

      # ________________________________________________________
      # Exercises
      - name: build and test openmp exercise
        run: |
          cd exercices/openmp/1_omp_parallel/correction
          g++ -O3 -fopenmp main.cpp -o c_exe
          gfortran -O3 -fopenmp main.F90 -o f_exe
          cd ../../2_omp_do/correction
          g++ -O3 -fopenmp main.cpp -o c_exe
          gfortran -O3 -fopenmp main.F90 -o f_exe

      # ________________________________________________________
      # Application - Diffusion
      #- name: build and test diffusion
      #  run: |
      #    cd tp/diffusion/fortran/sequentiel
      #    make

      # ________________________________________________________
      # Application - Onde
      - name: build and test onde
        run: |
          cd tp/onde/fortran/sequential
          make

      # ________________________________________________________
      # Application Marble
      - name: build and test marble
        run: |
          cd tp/marble/cpp/patch
          make

      # Runs a single command using the runners shell
      - name: build and test marble sequential
        run: |
          cd tp/marble/cpp/sequential
          make
